23:1-23:5::incr :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
23:6-23:7::x :: "{v : Int | v >= 0}"
23:10-23:11::x :: "{v : Int | v == x && v >= 0}"
23:12-23:13::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
23:14-23:15::lq_anf__dZK :: "{v : Int | v == (1 : int)}"
33:1-33:4::fib :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
33:11-33:12::I# :: "x1:Int# -> {v : Int | v == (x1 : int)}"
34:11-34:12::I# :: "x1:Int# -> {v : Int | v == (x1 : int)}"
35:11-35:14::fib :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
35:16-35:17::ds_dZw :: "{v : Int | v >= 0}"
35:17-35:18::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
35:18-35:19::lq_anf__dZE :: "{v : Int | v == (1 : int)}"
35:21-35:22::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"
35:23-35:26::fib :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
35:28-35:29::ds_dZw :: "{v : Int | v >= 0}"
35:29-35:30::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
35:30-35:31::lq_anf__dZH :: "{v : Int | v == (2 : int)}"
43:1-43:7::append :: "[a] -> [a] -> [a]"
43:15-43:17::ys :: "[a]"
43:20-43:22::ys :: "{v : [a] | v == ys && len v >= 0}"
44:20-44:21::x :: "{VV : a | VV == x}"
44:22-44:23::_ :: "x1:a\n-> x2:[a]\n-> {v : [a] | (null v <=> false) && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
44:24-44:30::append :: "[a] -> [a] -> [a]"
44:31-44:33::xs :: "{v : [a] | v == xs && len v >= 0}"
44:34-44:36::ys :: "{v : [a] | v == ys && len v >= 0}"
66:1-66:4::fac :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
66:9-66:10::I# :: "x1:Int# -> {v : Int | v == (x1 : int)}"
67:9-67:10::ds_dZr :: "{v : Int | v >= 0}"
67:11-67:12::_ :: "x1:Int\n-> x2:Int\n-> {v : Int | (x1 > 0 && x2 > 0 => v >= x1 && v >= x2) && (x1 > 1 && x2 > 1 => v > x1 && v > x2) && (x1 == 0 || x2 == 0 => v == 0)}"
67:13-67:16::fac :: "{v : Int | v >= 0} -> {v : Int | v >= 0}"
67:18-67:19::ds_dZr :: "{v : Int | v >= 0}"
67:19-67:20::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
67:20-67:21::lq_anf__dZN :: "{v : Int | v == (1 : int)}"