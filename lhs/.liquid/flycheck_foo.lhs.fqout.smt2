(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)
(set-option :smt.mbqi false)
(define-sort SMT_Elt () Int)
(define-sort SMT_Set () (Array SMT_Elt Bool))
(define-fun smt_set_emp () SMT_Set ((as const SMT_Set) false))
(define-fun smt_set_mem ((x SMT_Elt) (s SMT_Set)) Bool (select s x))
(define-fun smt_set_add ((s SMT_Set) (x SMT_Elt)) SMT_Set (store s x true))
(define-fun smt_set_cup ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s SMT_Set)) SMT_Set ((_ map not) s))
(define-fun smt_set_dif ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 SMT_Set) (s2 SMT_Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort SMT_Map () (Array SMT_Elt SMT_Elt))
(define-fun smt_map_sel ((m SMT_Map) (k SMT_Elt)) SMT_Elt (select m k))
(define-fun smt_map_sto ((m SMT_Map) (k SMT_Elt) (v SMT_Elt)) SMT_Map (store m k v))
(declare-fun z3v67 () Int)
(declare-fun z3v68 () Int)
(declare-fun z3v69 () Int)
(declare-fun z3v70 () Int)
(declare-fun z3v71 () Int)
(declare-fun z3v72 () Int)
(declare-fun z3v73 () Int)
(declare-fun z3f74 (Int) Int)
(declare-fun z3v75 () Int)
(declare-fun z3v76 () Int)
(declare-fun z3v77 () Int)
(push 1)
(assert true)
(assert (= z3v77 z3v71))
(assert (and (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (= z3v72 z3v71) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>  z3v77 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v77 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v77 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v77 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v77 z3v71))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v78 () Int)
(declare-fun z3v79 () Int)
(declare-fun z3v80 () Int)
(declare-fun z3v81 () Int)
(declare-fun z3v82 () Int)
(declare-fun z3v83 () Int)
(push 1)
(assert true)
(assert (= z3v83 z3v71))
(assert (and (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v82 z3v71) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>  z3v83 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v83 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v83 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v83 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v83 z3v71))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v84 () Int)
(declare-fun z3v85 () Int)
(declare-fun z3v86 () Int)
(declare-fun z3v87 () Int)
(declare-fun z3v88 () Int)
(declare-fun z3v89 () Int)
(declare-fun z3v90 () Int)
(declare-fun z3v91 () Int)
(declare-fun z3v92 () Int)
(push 1)
(assert true)
(assert (= z3v92 (+ z3v88 z3v85)))
(assert (and (>= z3v85 0) (= z3v87 (- z3v81 z3v86)) (= z3v86 2) (>= z3v88 0) (= z3v90 (- z3v81 z3v89)) (= z3v89 1) (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v91 (+ z3v88 z3v85)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v84 z3v71))
(assert (<= z3v84 z3v71))
(assert (>= z3v84 z3v71))
(push 1)
(assert (not (= z3v92 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v78))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v80))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v79))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v81))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v78)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v79)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v81)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v78))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v80))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v79))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v81))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v93 () Int)
(declare-fun z3v94 () Int)
(declare-fun z3v95 () Int)
(declare-fun z3v96 () Int)
(declare-fun z3v97 () Int)
(declare-fun z3v98 () Int)
(push 1)
(assert true)
(assert (and (=> (and (>  z3v70 0) (>  z3v94 0)) (and (>= z3v98 z3v70) (>= z3v98 z3v94))) (=> (or (= z3v70 0) (= z3v94 0)) (= z3v98 0)) (=> (and (>  z3v70 1) (>  z3v94 1)) (and (>  z3v98 z3v70) (>  z3v98 z3v94)))))
(assert (and (>= z3v94 0) (= z3v96 (- z3v70 z3v95)) (= z3v95 1) (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (=> (and (>  z3v70 0) (>  z3v94 0)) (and (>= z3v97 z3v70) (>= z3v97 z3v94))) (=> (or (= z3v70 0) (= z3v94 0)) (= z3v97 0)) (=> (and (>  z3v70 1) (>  z3v94 1)) (and (>  z3v97 z3v70) (>  z3v97 z3v94))) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v93 z3v71))
(assert (<= z3v93 z3v71))
(assert (>= z3v93 z3v71))
(push 1)
(assert (not (= z3v98 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v69))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v70))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v98 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v69))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v98 z3v70))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v98 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v99 () Int)
(declare-fun z3f100 (Int) Int)
(declare-fun z3v101 () Int)
(declare-fun z3v102 () Int)
(declare-fun z3v103 () Int)
(declare-fun z3f104 (Int) Int)
(declare-fun z3f105 (Int) Int)
(declare-fun z3f106 (Int) Bool)
(declare-fun z3f107 (Int Int) Int)
(declare-fun z3v108 () Int)
(declare-fun z3v109 () Int)
(declare-fun z3v110 () Int)
(push 1)
(assert true)
(assert (>= (z3f100 z3v110) 0))
(assert (= z3v110 z3v101))
(assert (>= (z3f100 z3v110) 0))
(assert (and (>= (z3f100 z3v99) 0) (>= (z3f100 z3v101) 0) (>= (z3f100 z3v102) 0) (= (z3f104 z3v102) z3v103) (= (z3f105 z3v102) z3v101) (= (z3f100 z3v102) (+ 1 (z3f100 z3v101))) (= (z3f106 z3v102) false) (= z3v102 (z3f107 z3v103 z3v101)) (>= (z3f100 z3v102) 0) (= z3v102 z3v108) (>= (z3f100 z3v102) 0) (>= (z3f100 z3v108) 0) (>= (z3f100 z3v109) 0) (= z3v109 z3v101) (>= (z3f100 z3v109) 0) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (and (>= (z3f100 z3v110) 0) (<  (z3f100 z3v110) (z3f100 z3v108)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v111 () Int)
(declare-fun z3v112 () Int)
(push 1)
(assert true)
(assert (= z3v112 z3v90))
(assert (= z3v112 (- z3v81 z3v89)))
(assert (and (= z3v90 (- z3v81 z3v89)) (= z3v89 1) (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v111 z3v90) (= z3v111 (- z3v81 z3v89)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v84 z3v71))
(push 1)
(assert (not (and (>= z3v112 0) (>= z3v112 0) (<  z3v112 z3v81))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v113 () Int)
(declare-fun z3v114 () Int)
(push 1)
(assert true)
(assert (= z3v114 z3v87))
(assert (= z3v114 (- z3v81 z3v86)))
(assert (and (= z3v87 (- z3v81 z3v86)) (= z3v86 2) (>= z3v88 0) (= z3v90 (- z3v81 z3v89)) (= z3v89 1) (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v113 z3v87) (= z3v113 (- z3v81 z3v86)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v84 z3v71))
(push 1)
(assert (not (and (>= z3v114 0) (>= z3v114 0) (<  z3v114 z3v81))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v115 () Int)
(push 1)
(assert true)
(assert (= z3v115 (+ z3v88 z3v85)))
(assert (and (>= z3v85 0) (= z3v87 (- z3v81 z3v86)) (= z3v86 2) (>= z3v88 0) (= z3v90 (- z3v81 z3v89)) (= z3v89 1) (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v91 (+ z3v88 z3v85)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v84 z3v71))
(push 1)
(assert (not (and (>= z3v115 0) (>= z3v115 0))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v116 () Int)
(push 1)
(assert true)
(assert (= z3v116 z3v71))
(assert (and (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v82 z3v71) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (= z3v116 z3v71)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v117 () Int)
(declare-fun z3v118 () Int)
(push 1)
(assert true)
(assert (>= z3v118 0))
(assert (>= z3v118 0))
(assert (and (not (= z3v78 1)) (not (= z3v78 0)) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (>= z3v117 0))
(assert (>= z3v117 0))
(push 1)
(assert (not (>= z3v118 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v119 () Int)
(declare-fun z3v120 () Int)
(push 1)
(assert true)
(assert (= z3v120 1))
(assert (and (= z3v78 0) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v119 1) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>= z3v120 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v121 () Int)
(declare-fun z3v122 () Int)
(push 1)
(assert true)
(assert (= z3v122 1))
(assert (and (= z3v78 1) (= z3v78 z3v79) (= z3v80 z3v79) (= z3v80 z3v79) (= z3v80 z3v81) (>= z3v80 0) (>= z3v81 0) (= z3v121 1) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>= z3v122 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v123 () Int)
(declare-fun z3v124 () Int)
(declare-fun z3v125 () Int)
(declare-fun z3v126 () Int)
(push 1)
(assert true)
(assert (= z3v126 (- z3v123 z3v124)))
(assert (and (>= z3v123 0) (= z3v124 1) (= z3v125 (- z3v123 z3v124)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>= z3v126 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v127 () Int)
(declare-fun z3v128 () Int)
(push 1)
(assert true)
(assert (= z3v128 z3v96))
(assert (= z3v128 (- z3v70 z3v95)))
(assert (and (= z3v96 (- z3v70 z3v95)) (= z3v95 1) (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (= z3v127 z3v96) (= z3v127 (- z3v70 z3v95)) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v93 z3v71))
(push 1)
(assert (not (and (>= z3v128 0) (>= z3v128 0) (<  z3v128 z3v70))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v129 () Int)
(push 1)
(assert true)
(assert (and (=> (and (>  z3v70 0) (>  z3v94 0)) (and (>= z3v129 z3v70) (>= z3v129 z3v94))) (=> (or (= z3v70 0) (= z3v94 0)) (= z3v129 0)) (=> (and (>  z3v70 1) (>  z3v94 1)) (and (>  z3v129 z3v70) (>  z3v129 z3v94)))))
(assert (and (>= z3v94 0) (= z3v96 (- z3v70 z3v95)) (= z3v95 1) (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (=> (and (>  z3v70 0) (>  z3v94 0)) (and (>= z3v97 z3v70) (>= z3v97 z3v94))) (=> (or (= z3v70 0) (= z3v94 0)) (= z3v97 0)) (=> (and (>  z3v70 1) (>  z3v94 1)) (and (>  z3v97 z3v70) (>  z3v97 z3v94))) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (= z3v93 z3v71))
(push 1)
(assert (not (and (>= z3v129 0) (>= z3v129 0))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v130 () Int)
(push 1)
(assert true)
(assert (= z3v130 z3v71))
(assert (and (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (= z3v72 z3v71) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (= z3v130 z3v71)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v131 () Int)
(declare-fun z3v132 () Int)
(push 1)
(assert true)
(assert (>= z3v132 0))
(assert (>= z3v132 0))
(assert (and (not (= z3v67 0)) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(assert (>= z3v131 0))
(assert (>= z3v131 0))
(push 1)
(assert (not (>= z3v132 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v133 () Int)
(declare-fun z3v134 () Int)
(push 1)
(assert true)
(assert (= z3v134 1))
(assert (and (= z3v67 0) (= z3v67 z3v68) (= z3v69 z3v68) (= z3v69 z3v68) (= z3v69 z3v70) (>= z3v69 0) (>= z3v70 0) (= z3v133 1) (= (z3f74 z3v73) z3v73) (= (z3f74 z3v75) z3v75) (= (z3f74 z3v76) z3v76)))
(push 1)
(assert (not (>= z3v134 0)))
(check-sat)
(pop 1)
(pop 1)
